from src.func import *
from pprint import pprint
import pandas as pd
import requests as req
import src.test_case as t_case
from tqdm import tqdm as tq
import numpy as np

class make_query_exploit:
    def __init__(self):
        self.result_csrf_data = []
        self.file_name_element = []
#    def send_all_param_random(self):
#        get_url = csv_data['URL'].to_list()
#        self.url = get_url[0]
#        get_port = csv_data['Port'].to_list()
#        self.port = get_port[0]

#        get_Path_list = csv_data['Path'].to_list()
#        self.path_list = []
#        self.parameter_list = {}
#        for i in range(len(get_Path_list)):
#            self.path_list.append(get_Path_list[i])

#        #path list = ['/manage','/help',.....]

#        self.path_list = list(set(self.path_list))
#        print("self.path_list")
#        for i in range(len(self.path_list)):
#            self.parameter_list[self.path_list[i]] = csv_data[csv_data['Path'] == self.path_list[i]]['Parameter'].to_list()
#        #parameter_list = {'path':[], 'path2':[]}

    def csrf_protection_check(self):
        print("############################################Csrf protection check##############################################")
        print("==============================================================================\n         F I L E  L I S T         \n==============================================================================")
        csv_list = os.listdir("./csv")
        csrf_csv_list = []

        for list in csv_list:
            if "post_value" in list:
                csrf_csv_list.append(list)

        pprint(csrf_csv_list)

        csrf_case_file_name = input("파일 이름을 입력해 주세요\nFILE : ")
        vmnum = csrf_case_file_name[17:20]
        user = csrf_case_file_name[21:-4]
        self.file_name_element.append(vmnum)
        self.file_name_element.append(user)
        csv_data=""
        if csrf_case_file_name in csrf_csv_list:
            csv_data = pd.read_csv(f"./csv/{csrf_case_file_name}.")
        else:
            print("파일 이름이 잘못되었습니다.")
            exit(0)

        chrome = webdriver.Chrome(check_driver())
        pw = input(f"계정 : {user} 비밀번호를 입력해 주세요\nPW : ")
        login(chrome, user, pw, "first_login")

        for i in tq(range(len(csv_data)), mininterval=1):
            data = csv_data.loc[i].tolist()
            #이게되네... 파이선은 신인가? csv 파일에서 읽어오기
            #url, port, id,pw, path는 셀레니움으로 접근 | action,value는 이제 request에서 사용

            dummy, url, port, id, pw, path, action, value, value_type = data

            try:
                key, value, response = t_case.Csrf_protection_check(chrome, url, port,id, pw, path, action, value, value_type)
            except:
                chrome = webdriver.Chrome(check_driver())
                key, value, response = t_case.Csrf_protection_check(chrome, url, port, id, pw, path, action, value, value_type)

            if key and value and response == 0:
                continue

            result_row = [url, port, action, key, value, response]
            self.result_csrf_data.append(result_row)


    def csrf_protection_check_to_csv(self):
        print("########################################Csrf protection check is finish, and Make to csv file########################################")
        Param_col = ['URL', 'Jenkins_id', 'Action', 'Key', 'Value', 'Response']
        DataFrame = pd.DataFrame(self.result_csrf_data, columns=Param_col)

        # 파일이 있는지 확인하고, 있으면 덮어씌움, 참고로 파일은 Scanning_result_유저이름.csv임
        check_dir("csv")

        result_file = f"CSRF_TEST_Result_{self.file_name_element[0]}_{self.file_name_element[1]}.csv"
        file_list = os.listdir("./csv/")

        check_csv_file(DataFrame, result_file, file_list)

